# Certificate Settings ---------------------------------------------------

### Create Certificate Files for Deployed Sites. (Optional) ##############
# Depends on mkcert utility (https://github.com/FiloSottile/mkcert).
certificate_generate=1

# Directory for generated certificates
certificate_certsDir=/etc/apache2/certificates/certs

# Directory for private keys of generated certificates
certificate_keysDir=/etc/apache2/certificates/keys

# Default certificate file and key for certificate creation fallback
certificate_default_certFile="/etc/ssl/certs/ssl-cert-snakeoil.pem"
certificate_default_keyFile="/etc/ssl/private/ssl-cert-snakeoil.key"





# Apache/PHP Settings ----------------------------------------------------

### Apache VHOST Config Files Directory ##################################
apache_sitesAvailableDir=/etc/apache2/sites-available
apache_sitesEnabledDir=/etc/apache2/sites-enabled

### Web Server Root Directory (Optional) ################################
# Root directory for your websites hosted on the server.
# Your site projects will be placed in this directory with their own domain names
# like path/to/rootfolder/<domain.name>.

# Examples:

# vhost_serverRootDir=<empty> : Use default web root dir (/var/www)
# E.g. /var/www/mysite.home, /var/www/myothersite.test

# vhost_serverRootDir=/var/www/websites : Place all web site projects in one separate folder.
# E.g. /var/www/websites/mysite.home, /var/www/websites/myothersite.test

# Placing all website projects in one main folder may be useful for 
# NFS shares, backupping, maintaining, organizing etc.

#vhost_serverRootDir=/var/www (*default*)
#vhost_serverRootDir=/var/www/sites
#vhost_serverRootDir=/var/www/webprojects
vhost_serverRootDir=/var/www

### VHOST Site Root Folder (Optional) ####################################
# Site root folder for files to be served by the server in the website directory.
# This is useful if you want to separate the site's private project files 
# and the files that will be served by Apache.

# Examples:

# vhost_siteRootFolder=<empty> : Use default domain.name folder as website's root directory.
# /var/www/mysite.home --> Will be served by Apache as website's document root.

# vhost_siteRootFolder=htdocs : Make subfolder "htdocs" as website's root folder.
# /var/www/mysite.home --> Won't be addressed by Apache, private project files can be stored.
# /var/www/mysite.home/htdocs --> Apache will use this folder as site document root to serve files.
vhost_siteRootFolder=

### Php Version for FPM (Optional) ########################################
# Leave it blank if you want to use server's default php version
# Or enter one of installed PHP versions e.g. 8.3
php_version=

### Advanced Settings (Optional) #########################################
#folder_perm="0755"
#file_perm="0644"
#php_dir="/etc/php/"






# Host/DNS Server Settings ------------------------------------------------

# Internal hosts file for domain redirections
hosts_file=/etc/hosts

### Remote DNS Server (Optional) ##########################################

# Set 1 to update remote dns entry
dns_server=0

# Web server ip address (Optional)
# Enter "this web server"s ip address for the domain redirection records in the DNS server
# Leave empty for auto-detect.
webserver_ip=

# Remote DNS server ip address (*Mandatory* for DNS server processes)
dns_ip=

# Remote DNS server ssh port (*Mandatory* for DNS server processes)
dns_port=22

# Remote DNS server ssh user (*Mandatory* for DNS server processes)
dns_user=root

# Remote User Password (Optional for DNS server processes)
# IMPORTANT: If you can connect to the DNS server with SSH key-based authentication,
# leave it empty to switch to that method. If you want to connect with password,
# enter the password below. It depends on "sshpass" utility to connect to the DNS server.
dns_pass=

# Remote DNS server hosts file path (*Mandatory* for DNS server processes)
dns_hostsFile=/opt/etc/hosts

# --- Remote DNS server service reload action (Optional) ----

# Service name (Optional)
dns_serviceName=dnsmasq

# Reload action on DNS entry update (Optional)
# Each time a domain entry is added or removed from the DNS server,
# it may be necessary to reload the DNS service.
dns_reloadOnUpdate=1
dns_reloadAction="killall -s SIGHUP dnsmasq"


########################################################################
### Below are my settings. You can review them as an example. ##########
########################################################################

#certificate_generate=1
#certificate_certsDir=/etc/apache2/certificates/certs
#certificate_keysDir=/etc/apache2/certificates/keys
#certificate_default_certFile=/etc/ssl/certs/ssl-cert-snakeoil.pem
#certificate_default_keyFile=/etc/ssl/private/ssl-cert-snakeoil.key
#apache_sitesAvailableDir=/etc/apache2/sites-available
#apache_sitesEnabledDir=/etc/apache2/sites-enabled
#vhost_serverRootDir=/var/www/websites
#vhost_siteRootFolder=htdocs
#php_version=
#hosts_file=/etc/hosts
#dns_server=1
#webserver_ip=192.168.1.10
#dns_ip=192.168.1.3
#dns_port=222
#dns_user=root
#dns_pass=
#dns_hostsFile=/opt/etc/hosts
#dns_serviceName=dnsmasq
#dns_reloadOnUpdate=1
#dns_reloadAction="killall -s SIGHUP dnsmasq"

########################################################################